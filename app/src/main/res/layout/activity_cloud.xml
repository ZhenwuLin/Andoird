<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
            android:layout_width="match_parent"
            android:layout_height="match_parent" >

    <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"

            android:orientation="vertical" >
        <TextView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:text="\nCloud Computing"
                android:typeface="serif"
                android:textSize="30dp"
                android:gravity="center"
                android:textStyle="bold"/>
        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Definition "/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"

                android:text="Cloud computing is the use of various services, such as software development platforms, servers, storage and software, over the internet, often referred to as the \u0022cloud.\u0022\n
\t\t\t\tIn general, there are three cloud computing characteristics that are common among all cloud-computing vendors:
"   android:textSize="20dp"/>

        <TextView
                android:layout_width="380dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"

                android:text="1.The back-end of the application (especially hardware) is completely managed by a cloud vendor.\n
2.A user only pays for services used (memory, processing time and bandwidth, etc.).\n
3.Services are scalable"
                android:textSize="20dp"/>


        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"

                android:text="    Many cloud computing advancements are closely related to virtualization. The ability to pay on demand and scale quickly is largely a result of cloud computing vendors being able to pool resources that may be divided among multiple clients.\n
\t\t\t\tIt is common to categorize cloud computing services as infrastructure as a service (IaaS), platform as a service (PaaS) or software as a service (SaaS).
"               android:textSize="20dp"/>
        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Explanation "/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    The internet of things is a difficult concept to define precisely. In fact, there are many different groups that have defined the term, although its initial use has been attributed to Kevin Ashton, an expert on digital innovation. Each definition shares the idea that the first version of the internet was about data created by people, while the next version is about data created by things. In 1999, Ashton said it best in this quote from an article in the RFID Journal:"
                android:textSize="20dp"/>
        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    Some consider cloud computing an overused buzzword that has been blown out of proportion by marketing departments at large software firms. A common argument from critics is that cloud computing cannot succeed because it means that organizations must lose control of their data, such as an email provider that stores data in multiple locations around the world. A large regulated company, like a bank, might be required to store data in the United States. While this is not an insurmountable issue, it demonstrates the type of issue that some companies may have with cloud computing.\n
\t\t\t\tCloud computing proponents point to it being a new paradigm in software development, where smaller organizations have access to processing power, storage and business processes that were once only available to large enterprises.\n
\t\t\t\tThe name cloud computing comes from the traditional usage of the cloud to represent the internet – or a wide area network (WAN) – in network diagrams or flowcharts.
"      android:textSize="20dp"/>



        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Service models"/>
        <View
                android:layout_width="400dp"
                android:layout_height="1dp"
                android:layout_below="@+id/rl_wallet"
                android:layout_gravity="center"
                android:layout_marginTop="2dp"
                android:background="#817E7E"/>

        <ImageView
                android:layout_width="360dp"
                android:layout_height="200dp"
                android:layout_marginTop="10dp"
                android:layout_gravity="center"
                android:src="@mipmap/cloud1"/>
        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:text="Cloud computing service models arranged as layers in a stack"
                android:textSize="18dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="   Though service-oriented architecture advocates \u0022everything as a service\u0022 (with the acronyms EaaS or XaaS, or simply aas), cloud-computing providers offer their \u0022services\u0022according to different models, of which the three standard models per NIST are Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS). These models offer increasing abstraction; they are thus often portrayed as a layers in a stack: infrastructure-, platform- and software-as-a-service, but these need not be related. For example, one can provide SaaS implemented on physical machines (bare metal), without using underlying PaaS or IaaS layers, and conversely one can run a program on IaaS and access it directly, without wrapping it as SaaS."
                android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Infrastructure as a service"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:textStyle="italic"
                android:typeface="serif"
                android:text="Main article: Infrastructure as a service"
                android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    \u0022Infrastructure as a service\u0022 (IaaS) refers to online services that provide high-level APIs used to dereference various low-level details of underlying network infrastructure like physical computing resources, location, data partitioning, scaling, security, backup etc. A hypervisor runs the virtual machines as guests. Pools of hypervisors within the cloud operational system can support large numbers of virtual machines and the ability to scale services up and down according to customers' varying requirements. Linux containers run in isolated partitions of a single Linux kernel running directly on the physical hardware. Linux cgroups and namespaces are the underlying Linux kernel technologies used to isolate, secure and manage the containers. Containerisation offers higher performance than virtualization, because there is no hypervisor overhead. Also, container capacity auto-scales dynamically with computing load, which eliminates the problem of over-provisioning and enables usage-based billing. IaaS clouds often offer additional resources such as a virtual-machine disk-image library, raw block storage, file or object storage, firewalls, load balancers, IP addresses, virtual local area networks (VLANs), and software bundles. \n\t\t\t\tThe NIST's definition of cloud computing describes IaaS as \u0022where the consumer is able to deploy and run arbitrary software, which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems, storage, and deployed applications; and possibly limited control of select networking components (e.g., host firewalls).\u0022\n
\t\t\t\tIaaS-cloud providers supply these resources on-demand from their large pools of equipment installed in data centers. For wide-area connectivity, customers can use either the Internet or carrier clouds (dedicated virtual private networks). To deploy their applications, cloud users install operating-system images and their application software on the cloud infrastructure. In this model, the cloud user patches and maintains the operating systems and the application software. Cloud providers typically bill IaaS services on a utility computing basis: cost reflects the amount of resources allocated and consumed.
"   android:textSize="20dp"/>


        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Platform as a service"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:textStyle="italic"
                android:typeface="serif"
                android:text="Main article: Platform as a service"
                android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    The NIST's definition of cloud computing defines Platform as a Service as:\n
\t\t\t\tThe capability provided to the consumer is to deploy onto the cloud infrastructure consumer-created or acquired applications created using programming languages, libraries, services, and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, or storage, but has control over the deployed applications and possibly configuration settings for the application-hosting environment.\n
\t\t\t\tPaaS vendors offer a development environment to application developers. The provider typically develops toolkit and standards for development and channels for distribution and payment. In the PaaS models, cloud providers deliver a computing platform, typically including operating system, programming-language execution environment, database, and web server. Application developers can develop and run their software solutions on a cloud platform without the cost and complexity of buying and managing the underlying hardware and software layers. With some PaaS offers like Microsoft Azure, Oracle Cloud Platform and Google App Engine, the underlying computer and storage resources scale automatically to match application demand so that the cloud user does not have to allocate resources manually. The latter has also been proposed by an architecture aiming to facilitate real-time in cloud environments.\n
\t\t\t\tSome integration and data management providers have also embraced specialized applications of PaaS as delivery models for data solutions. Examples include iPaaS (Integration Platform as a Service) and dPaaS (Data Platform as a Service). iPaaS enables customers to develop, execute and govern integration flows. Under the iPaaS integration model, customers drive the development and deployment of integrations without installing or managing any hardware or middleware. dPaaS delivers integration—and data-management—products as a fully managed service. Under the dPaaS model, the PaaS provider, not the customer, manages the development and execution of data solutions by building tailored data applications for the customer. dPaaS users retain transparency and control over data through data-visualization tools.[68] Platform as a Service (PaaS) consumers do not manage or control the underlying cloud infrastructure including network, servers, operating systems, or storage, but have control over the deployed applications and possibly configuration settings for the application-hosting environment.
"  android:textSize="20dp"/>



        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Software as a service"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:textStyle="italic"
                android:typeface="serif"
                android:text="Main article: Software as a service"
                android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    The NIST's definition of cloud computing defines Software as a Service as:\n
\t\t\t\tThe capability provided to the consumer is to use the provider's applications running on a cloud infrastructure. The applications are accessible from various client devices through either a thin client interface, such as a web browser (e.g., web-based email), or a program interface. The consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, storage, or even individual application capabilities, with the possible exception of limited user-specific application configuration settings.\n
\t\t\t\tIn the software as a service (SaaS) model, users gain access to application software and databases. Cloud providers manage the infrastructure and platforms that run the applications. SaaS is sometimes referred to as \u0022on-demand software\u0022 and is usually priced on a pay-per-use basis or using a subscription fee. In the SaaS model, cloud providers install and operate application software in the cloud and cloud users access the software from cloud clients. Cloud users do not manage the cloud infrastructure and platform where the application runs. This eliminates the need to install and run the application on the cloud user's own computers, which simplifies maintenance and support. Cloud applications differ from other applications in their scalability—which can be achieved by cloning tasks onto multiple virtual machines at run-time to meet changing work demand. Load balancersdistribute the work over the set of virtual machines. This process is transparent to the cloud user, who sees only a single access-point. To accommodate a large number of cloud users, cloud applications can be multitenant, meaning that any machine may serve more than one cloud-user organization.\n
\t\t\t\tThe pricing model for SaaS applications is typically a monthly or yearly flat fee per user, so prices become scalable and adjustable if users are added or removed at any point. Proponents claim that SaaS gives a business the potential to reduce IT operational costs by outsourcing hardware and software maintenance and support to the cloud provider. This enables the business to reallocate IT operations costs away from hardware/software spending and from personnel expenses, towards meeting other goals. In addition, with applications hosted centrally, updates can be released without the need for users to install new software. One drawback of SaaS comes with storing the users' data on the cloud provider's server. As a result, there could be unauthorized access to the data.
" android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Mobile \u0022backend\u0022 as a service"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:textStyle="italic"
                android:typeface="serif"
                android:text="Main article: Mobile backend as a service"
                android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    In the mobile \u0022backend\u0022 as a service (m) model, also known as backend as a service (BaaS), web app and mobile app developers are provided with a way to link their applications to cloud storage and cloud computing services with application programming interfaces (APIs) exposed to their applications and custom software development kits (SDKs). Services include user management, push notifications, integration with social networking services and more. This is a relatively recent model in cloud computing, with most BaaS startups dating from 2011 or later but trends indicate that these services are gaining significant mainstream traction with enterprise consumers. "
                android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Serverless computing"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:textStyle="italic"
                android:typeface="serif"
                android:text="Main article: Serverless computing"
                android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    Serverless computing is a cloud computing code execution model in which the cloud provider fully manages starting and stopping virtual machines as necessary to serve requests, and requests are billed by an abstract measure of the resources required to satisfy the request, rather than per virtual machine, per hour. Despite the name, it does not actually involve running code without servers. Serverless computing is so named because the business or person that owns the system does not have to purchase, rent or provision servers or virtual machines for the back-end code to run on."   android:textSize="20dp"/>
        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="SFunction as a service"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:textStyle="italic"
                android:typeface="serif"
                android:text="Main article: Function as a service"
                android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="Function as a service (FaaS) is a service-hosted remote procedure call that leverages serverless computing to enable the deployment of individual functions in the cloud that run in response to events. FaaS is included under the broader term serverless computing, but the terms may also be used interchangeably. "
                 android:textSize="20sp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Deployment models"/>

        <View
                android:layout_width="400dp"
                android:layout_height="1dp"
                android:layout_below="@+id/rl_wallet"
                android:layout_gravity="center"
                android:layout_marginTop="2dp"
                android:background="#817E7E"/>

        <ImageView
                android:layout_width="360dp"
                android:layout_height="200dp"
                android:layout_marginTop="10dp"
                android:layout_gravity="center"
                android:src="@mipmap/cloud2"/>
        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:text="Cloud computing types"
                android:textSize="18dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Private cloud"/>


        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="   Private cloud is cloud infrastructure operated solely for a single organization, whether managed internally or by a third party, and hosted either internally or externally. Undertaking a private cloud project requires significant engagement to virtualize the business environment, and requires the organization to reevaluate decisions about existing resources. It can improve business, but every step in the project raises security issues that must be addressed to prevent serious vulnerabilities. Self-run data centersare generally capital intensive. They have a significant physical footprint, requiring allocations of space, hardware, and environmental controls. These assets have to be refreshed periodically, resulting in additional capital expenditures. They have attracted criticism because users \u0022still have to buy, build, and manage them\u0022 and thus do not benefit from less hands-on management, essentially \u0022[lacking] the economic model that makes cloud computing such an intriguing concept\u0022. "
                android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Public cloud"/>


        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    A cloud is called a \u0022public cloud\u0022 when the services are rendered over a network that is open for public use. Public cloud services may be free. Technically there may be little or no difference between public and private cloud architecture, however, security consideration may be substantially different for services (applications, storage, and other resources) that are made available by a service provider for a public audience and when communication is effected over a non-trusted network. Generally, public cloud service providers like Amazon Web Services (AWS), Oracle, Microsoft and Google own and operate the infrastructure at their data center and access is generally via the Internet. AWS, Oracle, Microsoft, and Google also offer direct connect services called \u0022AWS Direct Connect\u0022, \u0022Oracle FastConnect\u0022, \u0022Azure ExpressRoute\u0022, and \u0022Cloud Interconnect\u0022 respectively, such connections require customers to purchase or lease a private connection to a peering point offered by the cloud provider."
                android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Hybrid cloud"/>


        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    A cloud is called a \u0022public cloud\u0022 when the services are rendered over a network that is open for public use. Public cloud services may be free. Technically there may be little or no difference between public and private cloud architecture, however, security consideration may be substantially different for services (applications, storage, and other resources) that are made available by a service provider for a public audience and when communication is effected over a non-trusted network. Generally, public cloud service providers like Amazon Web Services (AWS), Oracle, Microsoft and Google own and operate the infrastructure at their data center and access is generally via the Internet. AWS, Oracle, Microsoft, and Google also offer direct connect services called \u0022AWS Direct Connect\u0022, \u0022Oracle FastConnect\u0022, \u0022Azure ExpressRoute\u0022, and \u0022Cloud Interconnect\u0022 respectively, such connections require customers to purchase or lease a private connection to a peering point offered by the cloud provider."
                android:textSize="20dp"/>
        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    Hybrid cloud is a composition of two or more clouds (private, community or public) that remain distinct entities but are bound together, offering the benefits of multiple deployment models. Hybrid cloud can also mean the ability to connect collocation, managed and/or dedicated services with cloud resources. Gartner defines a hybrid cloud service as a cloud computing service that is composed of some combination of private, public and community cloud services, from different service providers. A hybrid cloud service crosses isolation and provider boundaries so that it can't be simply put in one category of private, public, or community cloud service. It allows one to extend either the capacity or the capability of a cloud service, by aggregation, integration or customization with another cloud service.\n
\t\t\t\tVaried use cases for hybrid cloud composition exist. For example, an organization may store sensitive client data in house on a private cloud application, but interconnect that application to a business intelligence application provided on a public cloud as a software service. This example of hybrid cloud extends the capabilities of the enterprise to deliver a specific business service through the addition of externally available public cloud services. Hybrid cloud adoption depends on a number of factors such as data security and compliance requirements, level of control needed over data, and the applications an organization uses.\n
\t\t\t\tAnother example of hybrid cloud is one where IT organizations use public cloud computing resources to meet temporary capacity needs that can not be met by the private cloud. This capability enables hybrid clouds to employ cloud bursting for scaling across clouds.[60] Cloud bursting is an application deployment model in which an application runs in a private cloud or data center and \u0022bursts\u0022 to a public cloud when the demand for computing capacity increases. A primary advantage of cloud bursting and a hybrid cloud model is that an organization pays for extra compute resources only when they are needed. Cloud bursting enables data centers to create an in-house IT infrastructure that supports average workloads, and use cloud resources from public or private clouds, during spikes in processing demands. The specialized model of hybrid cloud, which is built atop heterogeneous hardware, is called \u0022Cross-platform Hybrid Cloud\u0022. A cross-platform hybrid cloud is usually powered by different CPU architectures, for example, x86-64 and ARM, underneath. Users can transparently deploy and scale applications without knowledge of the cloud's hardware diversity. This kind of cloud emerges from the rise of ARM-based system-on-chip for server-class computing.
"
                android:textSize="20dp"/>


        <TextView android:layout_width="match_parent" android:layout_height="match_parent"
                  android:text="\n\n\n\n\n\"/>


    </LinearLayout>

</ScrollView>