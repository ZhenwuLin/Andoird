<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
            android:layout_width="match_parent"
            android:layout_height="match_parent" >

    <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"

            android:orientation="vertical" >
        <TextView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:text="\nBig Data"
                android:typeface="serif"
                android:textSize="30dp"
                android:gravity="center"
                android:textStyle="bold"/>
        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:textStyle="bold"
                android:textSize="25dp"
                android:text="Definition "/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"

                android:text="\t\t\t\tBig data refers to a process that is used when traditional data mining and handling techniques cannot uncover
the insights and meaning of the underlying data. Data that is unstructured or time sensitive or simply very large cannot
 be processed by relational database engines. This type of data requires a different processing approach called big data,
 which uses massive parallelism on readily-available hardware.\n     Processing information like this illustrates why big data has become so important:\n"
                android:textSize="20dp"/>
        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    •	Most data collected now is unstructured and requires different
storage and processing than that found in traditional relational databases\n
    • Available computational power is sky-rocketing, meaning there are more opportunities to process big data.\n
    • The Internet has democratized data, steadily increasing the data available while also producing more and more raw data\n"
                android:textSize="18dp"/>
        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="    Data in its raw form has no value. Data needs to be processed
in order to be of valuable. However, herein lies the inherent problem of
big data. Is processing data from native object format to a usable insight worth the massive capital cost of doing so? Or is there just too much data with unknown values to justify the gamble of processing it with big data tools? Most of us would agree that being able to predict the weather would have value, the question is whether that value could outweigh the costs of crunching all the real-time
data into a weather report that could be counted on."
                android:textSize="20dp"/>


        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="Architecture"
                android:textStyle="bold"
                android:textSize="25dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text=" \t\t\t\tBig data repositories have existed in many forms, often built by corporations with a special need. Commercial vendors historically offered parallel database management systems for big data beginning in the 1990s. For many years, WinterCorp published a largest database report. \n
\t\t\t\tTeradata Corporation in 1984 marketed the parallel processing DBC 1012 system. Teradata systems were the first to store and analyze 1 terabyte of data in 1992. Hard disk drives were 2.5 GB in 1991 so the definition of big data continuously evolves according to Kryder's Law. Teradata installed the first petabyte class RDBMS based system in 2007. As of 2017, there are a few dozen petabyte class Teradata relational databases installed, the largest of which exceeds 50 PB. Systems up until 2008 were 100% structured relational data. Since then, Teradata has added unstructured data types including XML, JSON, and Avro.
\t\t\t\tIn 2000, Seisint Inc. (now LexisNexis Group) developed a C++-based distributed file-sharing framework for data storage and query. The system stores and distributes structured, semi-structured, and unstructured data across multiple servers. Users can build queries in a C++ dialect called ECL. ECL uses an \u0022apply schema on read\u0022 method to infer the structure of stored data when it is queried, instead of when it is stored. In 2004, LexisNexis acquired Seisint Inc.[44] and in 2008 acquired ChoicePoint, Inc. and their high-speed parallel processing platform. The two platforms were merged into HPCC (or High-Performance Computing Cluster) Systems and in 2011, HPCC was open-sourced under the Apache v2.0 License. Quantcast File System was available about the same time. \n
\t\t\t\tCERN and other physics experiments have collected big data sets for many decades, usually analyzed via high performance computing (supercomputers) rather than the commodity map-reduce architectures usually meant by the current \u0022big data\u0022 movement.\n
\t\t\t\tIn 2004, Google published a paper on a process called MapReduce that uses a similar architecture. The MapReduce concept provides a parallel processing model, and an associated implementation was released to process huge amounts of data. With MapReduce, queries are split and distributed across parallel nodes and processed in parallel (the Map step). The results are then gathered and delivered (the Reduce step). The framework was very successful, so others wanted to replicate the algorithm. Therefore, an implementation of the MapReduce framework was adopted by an Apache open-source project named Hadoop. Apache Spark was developed in 2012 in response to limitations in the MapReduce paradigm, as it adds the ability to set up many operations (not just map followed by reduce).\n
\t\t\t\tMIKE2.0 is an open approach to information management that acknowledges the need for revisions due to big data implications identified in an article titled \u0022Big Data Solution Offering\u0022.The methodology addresses handling big data in terms of useful permutations of data sources, complexity in interrelationships, and difficulty in deleting (or modifying) individual records. \n
\t\t\t\t2012 studies showed that a multiple-layer architecture is one option to address the issues that big data presents. A distributed parallel architecture distributes data across multiple servers; these parallel execution environments can dramatically improve data processing speeds. This type of architecture inserts data into a parallel DBMS, which implements the use of MapReduce and Hadoop frameworks. This type of framework looks to make the processing power transparent to the end user by using a front-end application server.
\t\t\t\tThe data lake allows an organization to shift its focus from centralized control to a shared model to respond to the changing dynamics of information management. This enables quick segregation of data into the data lake, thereby reducing the overhead time. \n
\t\t\t\tBig data analytics for manufacturing applications is marketed as a\u00225C architecture\u0022 (connection, conversion, cyber, cognition, and configuration). Factory work and Cyber-physical systems may have an extended \u00226C system\u0022:\n"

                android:textSize="20dp"/>

        <TextView
                android:layout_width="400dp"
                android:layout_height="wrap_content"
                android:layout_gravity="right"
                android:gravity="left"
                android:typeface="serif"
                android:text="
•	Connection (sensor and networks)\n
•	Cloud (computing and data on demand)\n
•	Cyber (model and memory)\n
•	Content/context (meaning and correlation)\n
•	Community (sharing and collaboration)\n
•	Customization (personalization and value)
"
                android:textSize="18dp"/>




  <TextView android:layout_width="match_parent" android:layout_height="match_parent"
  android:text="\n\n\n\n\n\"/>


    </LinearLayout>

</ScrollView>